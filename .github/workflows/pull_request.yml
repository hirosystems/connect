name: Pull Request
on: [pull_request, workflow_dispatch]

jobs:
  check_fork:
    name: Disable jobs for forks
    runs-on: ubuntu-latest
    outputs:
      is_not_fork: ${{ steps.is_not_fork.outputs.is_not_fork }}
    steps:
      - name: Check for secret
        id: is_not_fork
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Is a fork: ${{ env.NPM_TOKEN == '' }}"
          echo "::set-output name=is_not_fork::${{ env.NPM_TOKEN != '' }}"

  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v5

  code_checks:
    name: Code checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Code Checks
        uses: ./.github/actions/code-checks

  publish_npm_betas:
    name: Publish NPM beta versions
    runs-on: ubuntu-latest
    needs: [check_fork]
    if: needs.check_fork.outputs.is_not_fork == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install monorepo deps
        run: npm ci
      - name: Setup .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - name: Get git branch
        id: git-branch
        run: echo "::set-output name=branch::$(git rev-parse --abbrev-ref HEAD | cut -d'/' -f2 )"
      - name: Get git commit
        id: git-commit
        run: echo "::set-output name=sha::$(git rev-parse --short HEAD)"
      - name: Set preid
        id: preid
        run: |
          if [ "${{ steps.git-branch.outputs.branch }}" = "beta" ]; then
            echo "preid=beta" >> "$GITHUB_OUTPUT"
          else
            echo "preid=alpha.${{ steps.git-commit.outputs.sha }}" >> "$GITHUB_OUTPUT"
          fi
      - name: Setup git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: Publish to NPM
        env:
          BRANCH: ${{ steps.git-branch.outputs.branch }}
          PREID: ${{ steps.preid.outputs.preid }}
        run: npx lerna publish prepatch --preid $PREID --dist-tag $BRANCH --yes --no-push
      - name: Get package versions
        id: versions
        run: |
          echo "connect=$(cat packages/connect/package.json | jq -r '.version')" >> "$GITHUB_OUTPUT"
          echo "connectreact=$(cat packages/connect-react/package.json | jq -r '.version')" >> "$GITHUB_OUTPUT"
          echo "connectui=$(cat packages/connect-ui/package.json | jq -r '.version')" >> "$GITHUB_OUTPUT"
      - uses: janniks/pull-request-fixed-header@v1.0.1
        with:
          header: "> This PR was published to npm with versions:\n> - connect `npm install @stacks/connect@${{ steps.versions.outputs.connect }} --save-exact`\n> - connect-react `npm install @stacks/connect-react@${{ steps.versions.outputs.connectreact }} --save-exact`\n> - connect-ui `npm install @stacks/connect-ui@${{ steps.versions.outputs.connectui }} --save-exact`"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
